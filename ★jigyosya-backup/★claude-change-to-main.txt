# 進捗管理ダッシュボードをメイン画面にする移設計画

## 📋 実装概要
現在の「メイン画面」(index.html) から「進捗管理ダッシュボード」(analytics.html) をメイン画面に変更する

## 🎯 移設が必要な機能

### 1. 編集ボタン
**現在の場所**: index.html の各クライアント行
**移設先**: analytics.html の進捗マトリクス表の各行
**実装内容**:
- 事業者名の横に「✏️ 編集」ボタンを追加
- details.html?id={clientId} へのリンク

### 2. データ管理アコーディオンメニュー
**現在の場所**: index.html 右上
**移設先**: analytics.html 右上 (パフォーマンスダッシュボードボタンの横)
**含まれる機能**:
- 📋 データ管理
  - この年度の項目を確定
  - 項目を翌期以降に再反映
  - データ整合性チェック・修復
  - クライアントデータのCSVエクスポート
  - クライアントデータのCSVインポート
  - データベース初期化

### 3. 表示設定アコーディオンメニュー
**現在の場所**: index.html 右上
**移設先**: analytics.html 右上
**含まれる機能**:
- ⚙️ 表示設定
  - フォント設定 (Arial, Meiryo, MS Gothic)
  - 非表示クライアント管理
  - コンフェッティエフェクト設定

## 🚀 実装手順

### Phase 1: 機能移植 (analytics.html/js に追加)

#### 1.1 編集ボタンの実装
```javascript
// analytics.js の displayProgressMatrix 関数内
// 事業者名セルに編集リンクを追加
<td style="border: 1px solid #dee2e6; padding: 8px;">
    <a href="details.html?id=${row.clientId}" 
       style="color: #007bff; text-decoration: none; margin-right: 10px;">
        ${row.clientName}
    </a>
    <a href="details.html?id=${row.clientId}" 
       style="background: #28a745; color: white; padding: 2px 6px; border-radius: 3px; text-decoration: none; font-size: 11px;">
        ✏️ 編集
    </a>
</td>
```

#### 1.2 データ管理メニューの移植
- index.js の管理機能関数群をコピー
- SupabaseAPI の各種メソッドをインポート
- アコーディオンメニューのHTML構造を移植
- CSV インポート・エクスポート機能
- 年度確定・伝播機能
- データベース初期化機能

#### 1.3 表示設定メニューの移植
- 個人設定の読み込み・保存機能
- フォント切り替え機能
- 非表示クライアント管理
- コンフェッティエフェクト設定

### Phase 2: UI統合 (analytics.html 更新)

#### 2.1 ヘッダー部分の更新
```html
<!-- 現在 -->
<div style="display: flex; gap: 10px;">
    <button id="performance-dashboard-button">👥 担当者別パフォーマンス</button>
    <button id="back-to-main">← メイン画面に戻る</button>
</div>

<!-- 変更後 -->
<div style="display: flex; gap: 10px; align-items: center;">
    <button id="performance-dashboard-button">👥 担当者別パフォーマンス</button>
    <!-- データ管理アコーディオンメニュー -->
    <!-- 表示設定アコーディオンメニュー -->
    <button id="back-to-simple-list">📋 シンプル一覧</button>
</div>
```

#### 2.2 進捗マトリクス表の拡張
- 編集ボタン付きの事業者名セル
- より見やすいレイアウト調整
- アクション列の追加検討

### Phase 3: ナビゲーション調整

#### 3.1 メイン画面の切り替え方法選択

**Option A: ファイル名変更 (推奨)**
```bash
analytics.html → index.html (メイン画面)
index.html → client-list.html (シンプル一覧)
analytics.js → index.js
```

**Option B: リダイレクト方式**
```javascript
// index.html に追加
window.location.href = 'analytics.html';
```

#### 3.2 他画面のナビゲーション更新
- details.html: 「← メイン画面に戻る」リンク更新
- performance.html: ナビゲーション調整
- 各画面の相互リンク調整

### Phase 4: 認証フローの調整

#### 4.1 認証エントリーポイント変更
- analytics.html を認証確認の起点に
- 未認証時のリダイレクト先調整
- セッション管理の調整

#### 4.2 初期画面設定
- デフォルト表示データの最適化
- 初回表示パフォーマンス調整

## 🎯 実装後の画面構成

### 新・メイン画面 (analytics.html → index.html)
- **役割**: 分析・検索・管理のハブ画面
- **機能**: 
  - 進捗分析とマトリクス表示
  - 事業者名検索
  - 各種フィルタリング
  - 編集機能への直接アクセス
  - データ管理機能
  - 表示設定機能

### シンプル一覧画面 (index.html → client-list.html)
- **役割**: 軽量なクライアント一覧
- **機能**:
  - 基本的なクライアント情報表示
  - 簡単な検索・フィルター
  - 詳細画面への遷移

### 詳細画面 (details.html)
- **役割**: 個別クライアントの詳細管理
- **変更**: 「← メイン画面に戻る」は analytics.html へ

## 📊 期待される効果

### ✅ メリット
1. **利便性向上**: 分析機能が常にアクセス可能
2. **作業効率**: 検索→分析→編集の流れが直線的
3. **情報密度**: より多くの情報を一画面で確認
4. **管理機能統合**: 散在していた機能が集約

### ⚠️ 注意点
1. **表示パフォーマンス**: 初回読み込みが若干重くなる
2. **UI複雑性**: 機能が多くなり画面が複雑化
3. **学習コスト**: ユーザーの慣れが必要

## 🚀 実装スケジュール提案

### Step 1: 機能移植 (1-2時間)
- 編集ボタンの追加
- アコーディオンメニューの移植
- 基本機能の動作確認

### Step 2: UI統合・調整 (1時間)
- レイアウト調整
- デザイン統一
- レスポンシブ対応

### Step 3: ナビゲーション更新 (30分)
- 画面間リンクの更新
- ファイル名変更
- 動作テスト

### Step 4: 最終テスト・調整 (30分)
- 全機能の動作確認
- パフォーマンス確認
- ブラウザ互換性確認

## 📝 実装準備完了

上記手順で「進捗管理ダッシュボード」をメイン画面化する準備が整いました。
実装開始のご指示をお待ちしております。

## 🎯 次のアクション
1. 実装方針の確認 (Option A vs Option B)
2. Phase 1 の実装開始
3. 段階的な動作確認と調整