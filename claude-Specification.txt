#この仕様書には絵文字は使用しないでください


● 事業者管理アプリ - 最新版仕様書

  プロジェクト概要

  Supabase + Vercel サーバーレス完全移行版事業者管理アプリケーション

- 本番URL: https://mori-jigyosya.vercel.app/
- Supabase Project: https://ocfljsoxxgmnzqlquchx.supabase.co
- リポジトリ: 

  技術スタック

  フロントエンド

  - HTML/CSS/JavaScript (Vanilla)
  - ホスティング: Vercel (サーバーレス)
  - 認証: Google OAuth 2.0
  - UI: カスタムドロップダウン、アコーディオンメニュー、モダントースト通知、テーブルリサイズ

  バックエンド・データベース

  - データベース: Supabase PostgreSQL
  - 認証: Supabase Auth (Google OAuth連携)
  - API: Supabase REST API + Edge Functions
  - 自動化: pg_cron拡張による定期処理
  - リアルタイム: Supabaseリアルタイム機能

  データベース構造

1. app_links

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
name
varchar
NOT NULL
url
text
NOT NULL
display_order
integer
DEFAULT 0
created_at
timestamp
DEFAULT now()

2. backup_history

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
backup_date
timestamp
backup_type
varchar
status
varchar
file_name
varchar
file_size_kb
integer
total_records
integer
error_message
text
created_at
timestamp
DEFAULT now()

3. clients

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
name
varchar
NOT NULL
fiscal_month
integer
CHECK (1–12)
staff_id
integer
FK → staffs.id
accounting_method
varchar
DEFAULT '記帳代行'
status
varchar
DEFAULT 'active'
custom_tasks_by_year
jsonb
DEFAULT '{}'
finalized_years
jsonb
DEFAULT '[]'
overall_memo
text
DEFAULT ''
created_at
timestamp
DEFAULT now()
updated_at
timestamp
DEFAULT now()

4. default_tasks

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
task_name
varchar
accounting_method
varchar
tasks
jsonb
display_order
integer
DEFAULT 0
is_active
boolean
DEFAULT true
created_at
timestamp
DEFAULT now()
updated_at
timestamp
DEFAULT now()

5. editing_sessions

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
client_id
integer
FK → clients.id
user_id
varchar
NOT NULL
started_at
timestamp
DEFAULT now()
last_activity
timestamp
DEFAULT now()

6. monthly_tasks

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
client_id
integer
FK → clients.id
month
varchar
NOT NULL
tasks
jsonb
DEFAULT '{}'
status
varchar
DEFAULT 'pending'
url
text
memo
text
created_at
timestamp
DEFAULT now()
updated_at
timestamp
DEFAULT now()
task_memos
jsonb
DEFAULT '{}'
completed
boolean
NOT NULL, DEFAULT false

7. settings

Column
Type
Constraints / Default
Keys
key
varchar
NOT NULL
PK
value
jsonb
NOT NULL
created_at
timestamp
DEFAULT now()
updated_at
timestamp
DEFAULT now()

8. staffs

Column
Type
Constraints / Default
Keys
id
integer
NOT NULL, DEFAULT nextval
PK
name
varchar
NOT NULL
email
varchar
role
varchar
DEFAULT 'staff'
created_at
timestamp
DEFAULT now()
updated_at
timestamp
DEFAULT now()

Relationships (Foreign Keys)
clients.staff_id → staffs.id
editing_sessions.client_id → clients.id
monthly_tasks.client_id → clients.id


  認証・セキュリティ

  Google OAuth認証

  - 認証プロバイダー: Google OAuth 2.0
- 承認済みオリジン: https://mori-jigyosya.vercel.app
  - セッション管理: Supabase Auth自動管理
  - ログイン頻度: 1日1回認証（自動セッション管理）

  Row Level Security (RLS) - 実装完了
  - データアクセス制御: Supabase RLS
  - 認証必須: 未ログイン時はデータアクセス不可
  - Anon Key: 公開（フロントエンド用、RLSで保護）

  主要機能

  1. クライアント管理

  - 一覧表示: 担当者別フィルター、検索機能
  - CRUD操作: 追加、編集、削除、再有効化
  - 関与終了機能: 業務終了クライアントのステータス管理
    ├── グレーアウト表示: 設定により非表示/グレー表示切替
    ├── 復活機能: 関与終了状態からの復帰
    └── 管理者権限削除: 物理削除は管理者のみ実行可能
  - カスタムタスク設定: クライアント独自の項目設定
  - 年度確定機能: 特定年度のタスク項目ロック
  - 全体メモ機能: クライアント全体に関するメモ記録・保存

  1.5. 担当者管理機能

  - CRUD操作: 担当者の追加・編集・削除（削除制限機能付き）
  - 割り当て管理: 担当クライアント数の自動集計・表示
  - 削除制限: 担当クライアントが存在する場合の削除防止機能
  - CSV抽出機能: 担当者情報の完全エクスポート
    ├── 出力項目: ID、担当者名、メール、権限、担当クライアント数、担当先一覧、作成・更新日時
    ├── 権限日本語化: admin→管理者、staff→担当者の自動変換
    ├── Excel対応: BOM付きUTF-8エンコーディング
    └── 担当先一覧: セミコロン区切りでの複数クライアント名表示
  - UI最適化: モーダルサイズ調整（700px幅、85vh高さ制限）

  2. 月次進捗管理

  - 進捗入力: チェックボックス形式
  - ステータス表示: `completed`フラグに基づき、最後に完了した年月を表示
  - 自動完了機能: 詳細画面でタスクを100%にして保存すると、自動で`completed`フラグが更新され、10種類の達成時エフェクトからランダムに1つが再生される
  - URL・メモ: 各月次記録に付加情報

  3. タスク項目管理

  - デフォルトタスク: 全クライアント共通の初期項目
  - カスタムタスク: クライアント別独自項目
  - 年度継承: 新年度アクセス時の前年度項目継承
  - タスク伝播: 項目変更時の未確定年度への反映

  4. 年度確定システム

  - 確定機能: 特定年度のタスク項目をロック
  - 編集制限: 確定済み年度は編集不可
  - 継承制御: 確定済み項目の新年度継承

  5. データ管理

  - **自動バックアップシステム**: Supabase Edge Functions + Cron Job による24時間365日自動実行
    ├── 毎日0:00（JST）自動実行: pg_cron スケジューラによる確実な実行
    ├── 週次ローテーション: Sunday-Saturday フォルダでストレージ最適化
    ├── クラウドストレージ: Supabase Storage による安全な保管
    ├── 実行履歴管理: backup_history テーブルでの監視・トラッキング
    └── 緊急時手動実行: アプリUI からの即座バックアップ機能
  - **手動バックアップシステム**: JSON形式・週次ローテーション・File System Access API対応
  - **安全な復元機能**: 外部キー制約・データ整合性完全保証
  - CSVエクスポート: UTF-8 BOM付きExcel対応
  - CSVインポート: 複数エンコーディング対応
  - データベース初期化: 完全リセット機能

  6. 編集制御

  - 悲観ロック: 編集競合防止
  - 強制解除: 編集セッション強制終了
  - 自動タイムアウト: 一定時間後の自動解除

  7. UI/UX改善機能

  - モダントースト通知システム
  - テーブル列幅調整システム

  8. その他アプリ連携機能

  - リンク管理: モーダル画面でのURLリンク管理（名称・URL）
  - CRUD操作: 追加・削除・保存に対応
  - 表示順変更: ドラッグ＆ドロップによる並べ替え
  - 動的ボタン生成: メイン画面のアコーディオン内に、登録したリンクをボタンとして動的生成
  - 外部リンク遷移: ボタンクリックで設定したURLを新しいタブで開く

  9. 高度分析機能付き進捗管理ダッシュボード

  **フェーズ1: 進捗管理ダッシュボード** - 実装完了
  - **多条件フィルター**: 期間・担当者・決算月での絞り込み
  - **動的サマリー**: 全体進捗率・完了タスク数・要注意クライアント自動検出
  - **進捗マトリクス表**: 事業者×年月のマトリクス表示
  - **完全ソート機能**: 事業者名・進捗率・担当者・決算月・月別進捗での並び替え
  - **月別進捗列**: 選択期間に応じた動的列生成
  - **カラーコード表示**: 緑（80%以上）/黄（50-79%）/赤（50%未満）
  - **エクスポート機能**: CSV・Excel（3種類）・PDF形式での出力
    ├── Excel統合シート: サマリーと進捗マトリクスを1シートに統合
    ├── Excel進捗表示: 基本・ヘッダー強調・アイコン付きの3形式
    └── PDF横向き出力: 月次データの色分け表示対応

  **フェーズ2: 担当者別パフォーマンスダッシュボード** - 実装完了
  - **パフォーマンス指標**: 担当クライアント数・平均完了率・完了月数・遅延発生月数
  - **4段階評価システム**: 優秀（95%以上）/良好（85-94%）/標準（70-84%）/要改善（70%未満）
  - **柔軟期間設定**: 今年度・前四半期・6ヶ月・12ヶ月・カスタム期間対応
  - **完全ソート機能**: 全パフォーマンス指標でのソート対応
  - **詳細確認連携**: ワンクリックで進捗ダッシュボードへ遷移
  - **相互ナビゲーション**: 進捗⟷パフォーマンスダッシュボード間の移動

  **フェーズ3: 週次進捗グラフ機能** - 実装完了
  - **Chart.js統合**: 3軸折れ線グラフによる週次推移表示（進捗率・完了タスク数・要注意クライアント数）
  - **スナップショット保存**: weekly_progress_snapshots テーブルによる履歴管理
  - **フィルター連動**: 既存フィルター条件（期間・担当者・決算月・事業者名）完全対応
  - **前週比計算**: 累積進捗率ベースでの前週比増減値表示
  - **要注意クライアント可視化**: 進捗50%未満クライアントの自動検出・警告表示
  - **ツールチップ最適化**: 各グラフライン固有の詳細情報表示
  - **UI改善**: トグル表示・統計情報・最新記録日表示

  ユーザーインターフェース

  メイン画面（analytics.html）

  - **統合ダッシュボード**: 進捗管理機能と顧客一覧機能を統合
  - **多条件フィルター**: 期間・担当者・決算月・事業者名での高度絞り込み
  - **進捗マトリクス表**: 事業者×年月のマトリクス表示（ID列・経理方式列・編集ボタン列付き）
  - **週次進捗グラフ**: Chart.js による3軸折れ線グラフ
  - **動的サマリー**: 全体進捗率・完了タスク数・要注意クライアント自動検出
  - **完全ソート機能**: 全列でのソート対応
  - **アコーディオンメニュー**: 「管理メニュー」と「その他アプリ」の2種類を配置
  - **エクスポート機能**: CSV・Excel・PDF形式での出力
  - **レスポンシブ対応**: 全デバイス対応の統合UI

  管理メニュー

  - 管理メニュー
    ├── 担当者管理（CSV抽出機能付き）
    ├── 顧問先追加
    ├── 基本設定
    ├── 項目の初期値の設定
    ├── バックアップ設定
    ├── CSVエクスポート
    ├── CSVインポート
    ├── 列幅リセット
    └── データベース初期化
  - その他アプリ
    ├── URL設定
    └── (動的に生成されるURLリンクボタン)

  詳細画面アコーディオン

  - データ管理メニュー
    ├── この年度の項目を確定
    ├── 項目を翌期以降に再反映
    ├── 削除された項目を自動削除
    ├── データ整合性チェック
    └── 項目の変更

  **分析機能画面**

  - **統合メイン画面**: analytics.html（新メイン画面）
    ├── フィルター & アクションエリア: 多条件絞り込み
    ├── 動的サマリーダッシュボード: リアルタイム集計結果
    ├── 進捗マトリクス表: 事業者×年月のマトリクス（ID・経理方式・編集ボタン列付き）
    ├── 週次進捗グラフ: Chart.js による推移表示
    ├── 顧客管理機能: 検索・フィルター・CRUD操作
    └── 完全ソート機能: 全列でのソート対応

  - **担当者別パフォーマンスダッシュボード**: performance.html
    ├── 期間設定エリア: 柔軟な期間選択
    ├── パフォーマンス一覧表: 担当者別指標表示
    ├── 4段階評価システム: 視覚的パフォーマンス評価
    └── 詳細確認連携: 統合メイン画面への遷移

  詳細・編集画面

  - 月次進捗表: 12ヶ月分の進捗管理
  - カスタムタスク設定: ドラッグ&ドロップ対応
  - 年度確定ボタン: 動的表示制御
  - 編集ロック表示: 編集中ユーザーの表示
  - ステータス管理UI
  - モバイル最適化: 横画面推奨表示、固定要素無効化、タッチフレンドリーUI

  設定・カスタマイズ

  環境設定

  // Supabase設定（自動検出）
  const SUPABASE_URL = 'https://lqwjmlkkdddjnnxnlyfz.supabase.co'
  const SUPABASE_ANON_KEY = '[自動設定]'

  カスタマイズ可能項目

  - デフォルトタスク項目: 基本設定から変更可能
  - 担当者リスト: 動的追加・編集
  - 年度設定: 会計年度に応じた自動調整
  - UI色調: CSS変数での一括変更
  - 外部リンク: 「その他アプリ」メニューから自由に設定可能

  パフォーマンス

  - CDN配信: Vercel Edge Network, jsDelivr (SortableJS)

  (その他変更なし)

  最新の進捗（2025年9月23日更新）

#### 今回セッション（9/23）- エクスポート機能拡張・UI改善・ページ遷移最適化

1. **進捗マトリクス表エクスポート機能拡張** - 完了
   - **ID列・経理方式列追加**: CSV・Excel・PDF全形式でID・経理方式列を追加実装
   - **項目順序統一**: 「ID」「事業者名」「担当者」「決算月」「経理方式」「進捗率」「年月列」の順に統一
   - **analytics.js修正**: generateCSVData()、createCombinedSheet()、generateDashboardStyleTable()の3関数を更新

2. **管理メニュー最適化** - 完了
   - **不要機能削除**: index.htmlから「列幅リセット」「スクロールモード」ボタンとその処理を完全削除
   - **JavaScript関数削除**: resetColumnWidths()、initResponsiveTable()、テーブルモード切り替え関連機能を削除
   - **基本機能保持**: initBasicResponsiveTable()で最小限のレスポンシブ機能を維持

3. **ページ遷移ロジック改善** - 完了
   - **edit.html遷移先分岐**: 新規作成時→index.html、編集時→analytics.html の遷移先分岐実装
   - **戻るボタン対応**: edit.htmlの戻るボタンもモード別遷移に対応
   - **リダイレクト問題解決**: 新規作成時のindex.html遷移でsessionStorage設定によりanalytics.htmlへの自動リダイレクトを防止

#### 前回セッション（9/21）- UI改善・エラー修正・ダッシュボード最適化

1. **UI改善とナビゲーション最適化** - 完了
   - **performance.htmlタイトル統一**: 「集計期間設定」文言削除・「担当者別パフォーマンスダッシュボード」タイトル統一
   - **タブナビゲーション改善**: 「担当者別」タブの表記を「担当者別進捗」に変更
   - **タブアニメーション強化**: アクティブタブの引き込み効果増強（transform: translateX(8px) translateY(2px)）

2. **ダッシュボードレイアウト大幅改善** - 完了
   - **4列レイアウト実装**: 25% + 25% + 50%の効率的配置
   - **サマリーカード水平表示**: 縦配置から横配置への変更で視認性向上
   - **要注意クライアント専用列**: 独立した25%幅でのリスト表示
   - **週次進捗グラフ拡張**: 50%幅での大画面表示対応
   - **モーダル機能実装**: 10件超過時の全要注意クライアント表示機能

3. **レイアウト精密調整** - 完了
   - **40%/60%分割**: サマリーカード40%・円グラフ60%の最適配置
   - **垂直中央揃え**: サマリーカードの美的配置調整
   - **円グラフ復旧**: 左右レイアウト（左: グラフ、右: 凡例）への再配置

4. **ナビゲーション・エラー修正** - 完了
   - **クリック動作統一**: 要注意クライアントを新タブではなく同一タブ遷移に変更
   - **データベースエラー解決**: attentionClientsのid/staffName未定義エラー修正
   - **円グラフサイズ復旧**: commit eed561f仕様（140x140px、min-height: 182px）への復元

#### 前回セッション（9/21）- analytics.html統合メイン画面化プロジェクト完了

1. **analytics.html統合メイン画面化** - 完了
   - **index.htmlカバーレイヤー実装**: デフォルトON状態のカバーオーバーレイシステム
   - **「設定画面へ移動」ボタン追加**: 既存「メイン画面に戻る」ボタンを流用して設置
   - **「その他のアプリ」機能完全移設**: Supabase連携・ドラッグ&ドロップ並び替え機能付き
   - **全ページ遷移先統一**: edit.html・details.htmlからanalytics.htmlへのリダイレクト設定
   - **Google OAuth設定変更**: ログイン後のリダイレクト先をanalytics.htmlに変更

2. **Google Cloud Console設定変更** - 完了
   - **承認済みJavaScript生成元**: https://mori-jigyosya.vercel.app 追加
   - **承認済みリダイレクトURI**: /analytics.html 追加設定
   - **認証フロー最適化**: Googleログイン後の統一ダッシュボード遷移

3. **設定画面遷移修正** - 完了
   - **「設定画面へ」ボタン修正**: analytics.js・performance.jsでindex.htmlへの正しいリダイレクト復旧

#### 前回セッション（9/20）- analytics.htmlレイアウト最適化

1. **レイアウト最適化実装** - 完了
   - **フィルターセクション統合**: 統合ヘッダー & フィルターエリアとして一つのセクションに統合
   - **タイトル移動**: 「進捗管理ダッシュボード」タイトルをフィルターセクション内の最上部に配置
   - **ボタン配置最適化**: 「担当者別パフォーマンス」と「メイン画面に戻る」ボタンを右上に配置
   - **スペース効率化**: 「フィルター & アクション」テキスト削除により情報表示エリア最大化

2. **進捗マトリクス表最適化** - 完了
   - **タイトル間隔調整**: 「進捗マトリクス表」タイトルとテーブル間の空間を縮小
   - **表示密度向上**: margin調整により更なる情報表示領域確保

#### 前回セッション（9/18）- グラフ最適化 & メイン画面統合準備

1. **週次進捗グラフ最適化** - 完了
   - **Y軸スケール改善**: 完了タスク数縦軸の最低値をMAXの50%に設定
   - **視覚的改善**: 縦軸範囲の最適化によりグラフの見やすさを大幅向上
   - **メイン・コンパクト版対応**: 両チャートタイプで統一適用

2. **開発ブランチ整理** - 完了
   - **メインブランチ統合**: 修正内容をmainブランチにcommit・保存
   - **ブランチクリーンアップ**: feature/dashboard-main-migrationブランチ削除
   - **作業環境整備**: メイン画面統合作業のための準備完了

#### 前回セッション（9/16）- 週次進捗グラフ機能完全実装

1. **週次進捗グラフ機能実装** - 完了
   - **SQLテーブル作成**: weekly_progress_snapshots テーブル新規作成・RLS設定完了
   - **データベースAPI**: saveWeeklySnapshot(), getWeeklyTrends() 関数実装完了
   - **Chart.js統合**: 3軸折れ線グラフ（進捗率・完了タスク数・要注意クライアント数）
   - **フィルター連動**: 既存フィルター条件（期間・担当者・決算月・事業者名）完全対応
   - **スナップショット保存**: 手動記録機能実装・リアルタイムデータ保存
   - **前週比計算**: 累積進捗率ベースでの前週比増減値表示
   - **要注意クライアント**: 進捗50%未満クライアントの可視化（赤色表示）
   - **ツールチップ最適化**: 各グラフライン固有の詳細情報表示
   - **UI改善**: トグル表示・週次データ統計情報・最新記録日表示

2. **データ一貫性修正** - 完了
   - **進捗計算統一**: ダッシュボードと週次グラフ間の計算方式統一
   - **期間フィルター修正**: 13ヶ月表示問題を12ヶ月表示に修正
   - **累積タスク方式**: クライアント平均から累積タスク数ベース計算に変更

3. **UI/UX最適化** - 完了
   - **ツールチップ情報整理**: 重複情報削除・各グラフライン固有情報表示
   - **月次完了から要注意表示**: 分かりにくい月次完了数を要注意クライアント数に変更
   - **視覚的改善**: 警告色（赤）での要注意クライアント強調表示

#### 前回セッション（9/15）- UI/UX改善 & PDF最適化 & 進捗表示機能強化

1. **詳細画面JavaScript修正** - 完了
   - **変数名不一致修正**: `generalMemoField` → `generalMemoFieldField` で変数名統一
   - **URL自動リンク化エラー解決**: initializeAutoLinkify関数のReferenceError修正
   - **構文チェック**: JavaScriptエラーの完全解消

2. **担当者別パフォーマンス一覧機能改善** - 完了
   - **フィルタリング機能**: 担当クライアント数が0の担当者を非表示化
   - **表示最適化**: アクティブな担当者のみを一覧表示
   - **3つの関数修正**: displayPerformanceResults, sortTable, displaySortedResults

3. **進捗マトリクス表の視覚的改善** - 完了
   - **資料受付完了表示**: 分子が1の場合に📋アイコンを自動表示
   - **2箇所での実装**: メイン表示関数とPDF印刷用関数の両方に対応
   - **直感的UI**: 1/5 → 📋 1/5 で資料受付状況を一目で把握可能

4. **PDFエクスポート機能の大幅改善** - 完了
   - **ダッシュボード準拠デザイン**: 現在の画面と同じ見た目でPDF生成
   - **横向きレイアウト**: A4 landscape形式での最適化
   - **情報密度向上**: ヘッダー情報を1行に集約、サマリーを枠なし表示
   - **決算月表示**: サイトと同様の赤線表示（📅アイコン削除）
   - **年月列幅統一**: 50px固定で整列表示
   - **行高最適化**: セルパディング縮小（6px→2px）で情報量最大化

5. **週次進捗グラフ機能の設計** - 計画完了
   - **実装計画書作成**: 7ステップの詳細手順書を作成
   - **データベース設計**: weekly_progress_snapshots テーブル仕様策定
   - **フィルター連動**: 既存フィルター条件に完全対応
   - **Chart.js実装**: 折れ線グラフによる週次推移表示
   - **総所要時間**: 約2時間15分の実装予定



#### 次回以降の実装予定（優先順位順）

1. **週次進捗グラフ自動化機能拡張**【次回最優先】
   - 自動スナップショット保存機能（日次・週次選択可能）
   - スナップショット管理機能（古いデータの自動削除・アーカイブ）
   - 週次グラフのカスタマイズ機能（表示期間・グラフ種類選択）
   - CSV/PDFエクスポート機能（週次トレンドデータの出力）
   - 閾値アラート機能（進捗率低下時の自動通知）

2. **悲観ロック機能の修復**
   - 編集競合防止システムの改善
   - 強制解除機能の最適化
   - タイムアウト処理の調整

3. **通知システム実装**
   - 期限接近アラート
   - 完了通知
   - システム更新通知

4. **詳細レポート機能**
   - 月次・年次レポート生成
   - PDF出力機能
   - カスタマイズ可能なレポートテンプレート

5. **高度検索機能**
   - 複合条件検索
   - 保存済み検索条件
   - 検索履歴管理

6. **パフォーマンス最適化**
   - 大量データ処理の高速化
   - キャッシュ戦略の改善
   - 遅延読み込み（Lazy Loading）の実装

#### 現在の完成度
- **基本機能**: 100%完成（全体メモ機能追加）
- **担当者管理機能**: 100%完成（CSV抽出機能・UI最適化完了）
- **データ整合性チェック**: 100%完成（決算月対応・JSONパース修正完了）
- **自動バックアップシステム**: 100%完成（Supabase Edge Functions + Cron Job）
- **手動バックアップ・復元**: 100%完成
- **UI/UX**: 100%完成（PDFエクスポート最適化・進捗表示改善完了）
- **モバイル対応**: 100%完成
- **データ管理**: 100%完成（自動バックアップシステム完全対応）
- **分析機能**: 100%完成（担当者フィルタリング・進捗表示改善完了）
- **エクスポート機能**: 100%完成（PDF最適化・ダッシュボード準拠デザイン完了）
- **カスタマイズ機能**: 100%完成（個人設定対応）
- **グラフ機能**: 100%完成（週次進捗グラフ完全実装・要注意クライアント可視化完了）
- **メイン画面統合**: 100%完成（analytics.html統合メイン画面化プロジェクト完了）
- **認証システム**: 100%完成（Google OAuth設定・リダイレクト統一完了）
- **通知システム**: 0%（未実装）
- **高度機能**: 100%完成（進捗マトリクス視覚改善により完成）

(以下、変更なし)

## 次回セッションでの実装予定作業事項（2025年9月23日更新）

### **最高優先度実装項目**

1. **進捗マトリクス表機能拡張** - 完了済み
   - **ID列追加**: 顧客IDの表示列追加 ✅
   - **経理方式列追加**: 記帳代行/自計の表示列追加 ✅
   - **編集ボタン列追加**: 各行に編集ボタン配置 ✅

### **高優先度実装項目**

1. **週次進捗グラフ自動化機能の実装**
   - **自動スナップショット**: Edge Functions + Cron Job による週次自動記録
   - **データ管理**: 古いスナップショットの自動削除・アーカイブ機能
   - **実装時間**: 約3時間（Supabase設定含む）

2. **週次グラフエクスポート機能**
   - **CSV出力**: 週次トレンドデータの完全エクスポート
   - **PDF出力**: グラフ画像付きレポート生成
   - **実装時間**: 約1.5時間

### **中優先度実装項目**

1. **スマートデバウンス自動保存機能の実装**
   - **対象画面**: 詳細画面（details.html）
   - **実装方式**: 3秒デバウンス + AutoSaveManagerクラス
   - **準備状況**: 完全な実装手順書（claude-autosave-implementation.txt）
   - **実装時間**: 約2.5時間（テスト含む）


---

## 将来的な最適化計画

### 週次進捗データ容量最適化 (必要時実装)

**実装時期**: データ容量100MB超過時、または性能劣化時

**案1: データ圧縮 (48%削減)**
```sql
-- 非正規化フィールド削除版
CREATE TABLE weekly_progress_snapshots_optimized (
  id SERIAL PRIMARY KEY,
  week_date DATE,
  client_id INTEGER REFERENCES clients(id),
  staff_id INTEGER REFERENCES staffs(id),
  progress_rate DECIMAL(5,2),
  completed_tasks INTEGER,
  total_tasks INTEGER,
  created_at TIMESTAMP DEFAULT NOW()
);
-- fiscal_month, client_name, staff_name を参照に変更
```

**案2: 自動アーカイブ機能**
```sql
-- 2年以上古いデータを月次集約
CREATE TABLE monthly_progress_archive (
  month_date DATE,
  client_id INTEGER,
  avg_progress_rate DECIMAL(5,2),
  avg_completed_tasks INTEGER,
  avg_total_tasks INTEGER
);
```

**案3: 段階的保存頻度**
- 直近3ヶ月: 週次保存
- 3ヶ月〜1年: 月次保存
- 1年以上: 四半期保存

**容量監視**
- 現在予測: 10年で3.5MB (問題なし)
- 監視指標: 年間500MB増加で要検討
- 確認方法: Supabaseダッシュボード定期確認

---

## 開発時の注意
①commit分は短く英文で作成してください
②開発はステップバイステップで進めて下さい
③良いアイデアがあったら教えてください
④**安定性を最優先**とし、問題発生時は即座にロールバックを実行してください

共有用完成
